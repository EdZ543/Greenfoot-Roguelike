#BlueJ class context
comment0.target=Animation
comment1.params=imgSet\ actsInAnimation\ originalDir
comment1.target=AnimationState(greenfoot.GreenfootImage[],\ int,\ java.lang.String)
comment10.params=imgSet\ actsInAnimation
comment10.target=void\ setAnimation(greenfoot.GreenfootImage[],\ int)
comment10.text=\n\ sets\ the\ images\ and\ speed\ regulator\ value\ (the\ time,\ in\ act\ cycles,\ it\ takes\ for\ the\ set\ of\ images\ to\ be\ shown\ once)\n\ \n\ @param\ imgSet\ the\ images\ to\ be\ used\ in\ the\ animation\n\ @param\ actsInAnimation\ number\ of\ act\ cycles\ to\ complete\ one\ animation\ cycle\ in\n
comment11.params=imgSet
comment11.target=void\ setFrames(greenfoot.GreenfootImage[])
comment11.text=\n\ sets\ the\ images\ to\ be\ used\ in\ the\ animation\n\ \n\ @param\ imgSet\ the\ images\ to\ be\ used\ in\ the\ animation\n
comment12.params=
comment12.target=greenfoot.GreenfootImage[]\ getFrames()
comment12.text=\n\ returns\ the\ images\ currently\ set\ to\ be\ used\ in\ the\ animation\n\ \n\ @return\ the\ array\ of\ images\ currently\ set\ to\ the\ animation\n
comment13.params=acts
comment13.target=void\ setCycleActs(int)
comment13.text=\n\ sets\ the\ speed\ regulator\ value\ (the\ time,\ in\ act\ cycles,\ it\ takes\ for\ the\ set\ of\ images\ to\ be\ shown\ once)\n\ \n\ @param\ acts\ the\ number\ of\ act\ cycles\ to\ complete\ one\ animation\ cycle\ in\n
comment14.params=
comment14.target=int\ getCycleActs()
comment14.text=\n\ returns\ the\ speed\ regulator\ value\n\ \n\ @return\ the\ number\ of\ act\ cycles\ that\ one\ animation\ cycle\ is\ currently\ set\ to\ run\ in\n
comment15.params=state
comment15.target=void\ setActiveState(boolean)
comment15.text=\n\ sets\ the\ active\ state\ of\ the\ animation;\ it\ is\ only\ set\ active\ if\ field\ values\ are\ set\ properly\n\ \n\ @param\ state\ a\ true/false\ value\ indicating\ which\ active\ state\ to\ set\ the\ animation\ in\n
comment16.params=
comment16.target=boolean\ isActive()
comment16.text=\n\ returns\ the\ active\ state\ of\ the\ animation\n\ \n\ @return\ the\ current\ active\ state\ the\ animation\ is\ currrently\ in\n
comment17.params=
comment17.target=void\ reverseImageOrder()
comment17.text=\n\ reverses\ the\ order\ of\ images\ in\ the\ animation\ set\ (allows\ the\ animation\ to\ be\ run\ backwards)\n
comment2.params=object\ imgSet
comment2.target=Animation(java.lang.Object,\ greenfoot.GreenfootImage[])
comment2.text=\n\ creates\ an\ animation\ object\ that\ uses\ the\ given\ images\ for\ the\ given\ object;\n\ \n\ @param\ object\ the\ object\ to\ be\ animated\n\ @param\ imgSet\ the\ images\ to\ be\ used\ in\ the\ animation;\ a\ 'null'\ value\ or\ an\ empty\ array\ will\ invalidate\ the\ animation\n
comment3.params=object
comment3.target=Animation(java.lang.Object)
comment4.params=stateName\ imgSet\ actsInAnimation\ originalDir
comment4.target=void\ addState(java.lang.String,\ greenfoot.GreenfootImage[],\ int,\ java.lang.String)
comment5.params=state
comment5.target=void\ setState(java.lang.String)
comment6.params=state
comment6.target=boolean\ hasState(java.lang.String)
comment7.params=dir
comment7.target=void\ setDir(java.lang.String)
comment8.params=index
comment8.target=void\ setFrame(int)
comment8.text=\n\ internal\ method\ that\ updates\ the\ image\ of\ the\ animation\n
comment9.params=
comment9.target=boolean\ run()
comment9.text=\n\ if\ animating,\ runs\ the\ timer\ and\ updates\ the\ image\ when\ needed\n\ \n\ @return\ a\ flag\ indicating\ the\ current\ animation\ cycle\ has\ completed\n
numComments=18
