#BlueJ class context
comment0.target=Animation
comment1.params=imgSet\ acts\ originalDir
comment1.target=AnimationState(greenfoot.GreenfootImage[],\ int,\ java.lang.String)
comment10.params=
comment10.target=boolean\ run()
comment10.text=\r\n\ if\ animating,\ runs\ the\ timer\ and\ updates\ the\ image\ when\ needed\r\n\ \r\n\ @return\ a\ flag\ indicating\ the\ current\ animation\ cycle\ has\ completed\r\n
comment11.params=imgSet\ actsInAnimation
comment11.target=void\ setAnimation(greenfoot.GreenfootImage[],\ int)
comment11.text=\r\n\ sets\ the\ images\ and\ speed\ regulator\ value\ (the\ time,\ in\ act\ cycles,\ it\ takes\ for\ the\ set\ of\ images\ to\ be\ shown\ once)\r\n\ \r\n\ @param\ imgSet\ the\ images\ to\ be\ used\ in\ the\ animation\r\n\ @param\ actsInAnimation\ number\ of\ act\ cycles\ to\ complete\ one\ animation\ cycle\ in\r\n
comment12.params=imgSet
comment12.target=void\ setFrames(greenfoot.GreenfootImage[])
comment12.text=\r\n\ sets\ the\ images\ to\ be\ used\ in\ the\ animation\r\n\ \r\n\ @param\ imgSet\ the\ images\ to\ be\ used\ in\ the\ animation\r\n
comment13.params=
comment13.target=greenfoot.GreenfootImage[]\ getFrames()
comment13.text=\r\n\ returns\ the\ images\ currently\ set\ to\ be\ used\ in\ the\ animation\r\n\ \r\n\ @return\ the\ array\ of\ images\ currently\ set\ to\ the\ animation\r\n
comment14.params=acts
comment14.target=void\ setCycleActs(int)
comment14.text=\r\n\ sets\ the\ speed\ regulator\ value\ (the\ time,\ in\ act\ cycles,\ it\ takes\ for\ the\ set\ of\ images\ to\ be\ shown\ once)\r\n\ \r\n\ @param\ acts\ the\ number\ of\ act\ cycles\ to\ complete\ one\ animation\ cycle\ in\r\n
comment15.params=
comment15.target=int\ getCycleActs()
comment15.text=\r\n\ returns\ the\ speed\ regulator\ value\r\n\ \r\n\ @return\ the\ number\ of\ act\ cycles\ that\ one\ animation\ cycle\ is\ currently\ set\ to\ run\ in\r\n
comment16.params=state
comment16.target=void\ setActiveState(boolean)
comment16.text=\r\n\ sets\ the\ active\ state\ of\ the\ animation;\ it\ is\ only\ set\ active\ if\ field\ values\ are\ set\ properly\r\n\ \r\n\ @param\ state\ a\ true/false\ value\ indicating\ which\ active\ state\ to\ set\ the\ animation\ in\r\n
comment17.params=
comment17.target=boolean\ isActive()
comment17.text=\r\n\ returns\ the\ active\ state\ of\ the\ animation\r\n\ \r\n\ @return\ the\ current\ active\ state\ the\ animation\ is\ currrently\ in\r\n
comment18.params=
comment18.target=void\ reverseImageOrder()
comment18.text=\r\n\ reverses\ the\ order\ of\ images\ in\ the\ animation\ set\ (allows\ the\ animation\ to\ be\ run\ backwards)\r\n
comment2.params=object\ stateName\ imgSet\ acts\ originalDir
comment2.target=Animation(java.lang.Object,\ java.lang.String,\ greenfoot.GreenfootImage[],\ int,\ java.lang.String)
comment2.text=\r\n\ creates\ an\ animation\ object\ that\ uses\ the\ given\ images\ for\ the\ given\ object;\r\n\ \r\n\ @param\ object\ the\ object\ to\ be\ animated\r\n\ @param\ stateName\ the\ name\ of\ the\ starting\ state\r\n\ @param\ imgSet\ the\ images\ to\ be\ used\ in\ the\ animation;\ a\ 'null'\ value\ or\ an\ empty\ array\ will\ invalidate\ the\ animation\r\n\ @param\ acts\ speed\ of\ animation\r\n\ @param\ originalDir\ the\ direction\ the\ raw\ images\ are\ facing\ originally\r\n
comment3.params=object\ imgSet\ acts
comment3.target=Animation(java.lang.Object,\ greenfoot.GreenfootImage[],\ int)
comment3.text=\r\n\ Simpler\ constructor\ for\ \r\n
comment4.params=stateName\ imgSet\ acts\ originalDir
comment4.target=void\ addState(java.lang.String,\ greenfoot.GreenfootImage[],\ int,\ java.lang.String)
comment4.text=\r\n\ Adds\ an\ animation\ state\r\n
comment5.params=state
comment5.target=void\ setState(java.lang.String)
comment5.text=\r\n\ Sets\ to\ an\ animation\ state\r\n
comment6.params=dir
comment6.target=void\ setDir(java.lang.String)
comment6.text=\r\n\ Set\ direction\ for\ animation\ to\ face\r\n
comment7.params=numFrames\ prefix\ suffix\ width\ height
comment7.target=greenfoot.GreenfootImage[]\ generateFrames(int,\ java.lang.String,\ java.lang.String,\ int,\ int)
comment7.text=\r\n\ Method\ for\ quickly\ generating\ animation\ frames,\ given\ that\ all\ images\ have\ the\ same\ path\ except\ for\ a\ number.\r\n\ @param\ numFrames\ number\ of\ frames\r\n\ @param\ prefix\ filepath\ before\ the\ number\r\n\ @param\ suffix\ filepath\ after\ the\ number\r\n\ @param\ width\ the\ width\ of\ the\ frames\r\n\ @param\ height\ the\ height\ of\ the\ frames\r\n\ @return\ an\ array\ of\ GreenfootImage\ frames\r\n
comment8.params=
comment8.target=boolean\ endOfAnimation()
comment8.text=\r\n\ Whether\ or\ not\ it's\ the\ end\ of\ an\ animation\ cycle,\ for\ one-time\ animations\r\n
comment9.params=index
comment9.target=void\ setFrame(int)
comment9.text=\r\n\ internal\ method\ that\ updates\ the\ image\ of\ the\ animation\r\n
numComments=19
